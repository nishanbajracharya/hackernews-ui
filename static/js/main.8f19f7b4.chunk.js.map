{"version":3,"sources":["utils/http.js","components/arrow.js","components/loading.js","views/list.js","components/close.js","views/story.js","app.js","serviceWorker.js","index.js"],"names":["BASE_URL","process","REACT_APP_API_URL","instance","axios","create","baseURL","responseType","http","get","url","_ref","arguments","length","undefined","_ref$params","params","_ref$responseType","_ref$headers","headers","method","then","response","data","put","_ref3","_ref3$params","_ref3$body","body","_ref3$headers","post","_ref2","_ref2$params","_ref2$body","_ref2$headers","delete","_ref4$params","Arrow","_ref$onClick","onClick","f","_ref$className","className","react_default","a","createElement","width","xmlns","viewBox","fill","d","LoadingSVG","_ref$stroke","stroke","height","transform","strokeWidth","fillRule","strokeOpacity","cx","cy","r","attributeName","type","from","to","dur","repeatCount","Loading","_ref2$className","concat","PropTypes","string","SwitchPage","_ref$page","page","_ref$changePage","changePage","arrow","ListItem","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","props","id","setState","Link","pathname","title","React","PureComponent","List","_this2","by","pageSize","list","list_SwitchPage","loading_LoadingSVG","slice","map","list_ListItem","key","Close","_ref$fill","Comment","dangerouslySetInnerHTML","__html","text","kids","App","BrowserRouter","basename","Route","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f19f7b4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL =\n  process.env.REACT_APP_API_URL || \"https://hacker-news.firebaseio.com/v0\";\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  responseType: \"json\"\n});\n\n/**\n * @param {String} url The url for the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Boolean} [config.accessToken] Whether or not to include the\n * access-token header\n * @returns {Observable}\n */\nfunction get(url, { params = {}, responseType = \"json\", headers = {} } = {}) {\n  return instance({\n    url,\n    params,\n    headers,\n    responseType,\n    method: \"get\"\n  }).then(response => response.data);\n}\n\n/**\n * @param {String} url The url for the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Object} [config.body] An object that will be sent in the request\n * body\n * @param {Boolean} [config.accessToken] Whether or not to include the\n * access-token header\n * @returns {Observable}\n */\nfunction post(url, { params = {}, body = {}, headers = {} } = {}) {\n  return instance({\n    url,\n    headers,\n    params,\n    data: body,\n    method: \"post\"\n  }).then(response => response.data);\n}\n\n/**\n * @param {String} url The url for the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Object} [config.body] An object that will be sent in the request\n * body\n * @param {Boolean} [config.accessToken] Whether or not to include the\n * access-token header\n * @returns {Observable}\n */\nfunction put(url, { params = {}, body = {}, headers = {} } = {}) {\n  return instance({\n    url,\n    params,\n    headers,\n    data: body,\n    method: \"put\"\n  }).then(response => response.data);\n}\n\n/**\n * @param {String} url The url for the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Boolean} [config.accessToken] Whether or not to include the\n * access-token header\n * @returns {Observable}\n */\nfunction remove(url, { params = {} } = {}) {\n  const headers = {};\n\n  return instance({\n    url,\n    headers,\n    params,\n    method: \"delete\"\n  }).then(response => response.data);\n}\n\nexport default {\n  get,\n  put,\n  post,\n  delete: remove\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Arrow = ({ onClick = f => f, className = '' }) => (\n  <svg\n    width=\"32\"\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\"\n    onClick={onClick}\n  >\n    <path\n      fill=\"#fff\"\n      d=\"M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z\"\n    />\n  </svg>\n);\n\nArrow.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default Arrow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LoadingSVG = ({\n  stroke = '#49c'\n}) => (\n  <svg width=\"38\" height=\"38\" xmlns=\"http://www.w3.org/2000/svg\" stroke={stroke}>\n    <g\n      transform=\"translate(1 1)\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    >\n      <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n      <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 18 18\"\n          to=\"360 18 18\"\n          dur=\"1s\"\n          repeatCount=\"indefinite\"\n        />\n      </path>\n    </g>\n  </svg>\n);\n\nLoadingSVG.propTypes = {\n  stroke: PropTypes.string\n};\n\nconst Loading = ({ className = \"\" }) => (\n  <div className={`loading ${className}`} />\n);\n\nLoading.PropTypes = {\n  className: PropTypes.string\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport http from \"../utils/http\";\nimport Arrow from \"../components/arrow\";\nimport Loading, { LoadingSVG } from \"../components/loading\";\n\nconst SwitchPage = ({ page = 0, changePage = f => f }) => (\n  <div className=\"pages\">\n    <Arrow onClick={() => changePage(-1)} />\n    {page + 1}\n    <Arrow className=\"forward\" onClick={() => changePage(1)} />\n  </div>\n);\n\nclass ListItem extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      data: {}\n    };\n  }\n\n  async componentDidMount() {\n    const data = await http.get(`/item/${this.props.id}.json`);\n\n    this.setState({ data, loading: false });\n  }\n\n  render() {\n    return (\n      <div className=\"list-item\">\n        {this.state.loading && <Loading className=\"centered\" />}\n        {this.state.data.id && (\n          <div>\n            <Link\n              to={{\n                state: { data: this.state.data },\n                pathname: `/${this.props.id}`\n              }}\n            >\n              {this.state.data.title}\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass List extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      page: 0,\n      pageSize: 50,\n      loading: true,\n      list: []\n    };\n  }\n\n  async componentDidMount() {\n    const list = await http.get(\"/topstories.json\");\n\n    this.setState({ list, loading: false });\n  }\n\n  changePage = (by = 1) => {\n    if (this.state.page === 0 && by === -1) return;\n    this.setState({ page: this.state.page + by });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"main-title\">\n          Hacker News Stories\n          <SwitchPage page={this.state.page} changePage={this.changePage} />\n        </h2>\n        {this.state.loading && (\n          <div className=\"container\">\n            <LoadingSVG />\n            <p>Fetching Stories</p>\n          </div>\n        )}\n        <div className=\"container\">\n          {this.state.list\n            .slice(\n              this.state.page * this.state.pageSize,\n              (this.state.page + 1) * this.state.pageSize\n            )\n            .map(id => <ListItem id={id} key={id} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Close = ({ onClick = f => f, className, fill = '#a22' }) => (\n  <svg\n    className={className}\n    width=\"32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\"\n    onClick={onClick}\n  >\n    <path\n      fill={fill}\n      d=\"M256 48C140.559 48 48 140.559 48 256c0 115.436 92.559 208 208 208 115.435 0 208-92.564 208-208 0-115.441-92.564-208-208-208zm104.002 282.881l-29.12 29.117L256 285.117l-74.881 74.881-29.121-29.117L226.881 256l-74.883-74.881 29.121-29.116L256 226.881l74.881-74.878 29.12 29.116L285.119 256l74.883 74.881z\"\n    />\n  </svg>\n);\n\nClose.propTypes = {\n  fill: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default Close;\n","import React from \"react\";\n\nimport http from \"../utils/http\";\nimport Close from \"../components/close\";\nimport Loading from \"../components/loading\";\n\nfunction isDescendant(parent, child) {\n  var node = child.parentNode;\n  while (node != null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n}\n\nclass Comment extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      data: {}\n    };\n  }\n\n  async componentDidMount() {\n    const data = await http.get(`/item/${this.props.id}.json`);\n\n    this.setState({ data, loading: false });\n  }\n\n  render() {\n    return (\n      <div className=\"comment\">\n        {this.state.loading && <Loading />}\n        {this.state.data.id && (\n          <div className=\"comment-body\">\n            <h4>{this.state.data.by}</h4>\n            <div\n              className=\"text\"\n              dangerouslySetInnerHTML={{ __html: this.state.data.text }}\n            />\n          </div>\n        )}\n        {this.state.data.kids &&\n          this.state.data.kids.length > 0 && (\n            <div className=\"comment-sub\">\n              {this.state.data.kids.map((id, key) => (\n                <Comment id={id} key={key} />\n              ))}\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nclass Story extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      className: \"\",\n      data: {\n        kids: []\n      }\n    };\n  }\n\n  onRequestClose = (e, bypassKey = false) => {\n    this.setState({ className: \"\" });\n    setTimeout(\n      () =>\n        ((e && e.key === \"Escape\") || bypassKey) && this.props.history.goBack(),\n      250\n    );\n  };\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ className: \"open\" }));\n    this.props.location &&\n      this.props.location.state &&\n      this.setState({\n        data: this.props.location.state.data\n      });\n\n    document.addEventListener(\"keydown\", this.onRequestClose);\n  }\n\n  onHandleOverlayClick = e => {\n    if (e.target !== this.content && !isDescendant(this.content, e.target)) {\n      this.onRequestClose(null, true);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modal-overlay\" onClick={this.onHandleOverlayClick}>\n        <div\n          className={`modal-content ${this.state.className}`}\n          ref={c => (this.content = c)}\n        >\n          <Close\n            className=\"close\"\n            onClick={() => this.onRequestClose(null, true)}\n          />\n          <h2>\n            <a href={this.state.data.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {this.state.data.title}\n            </a>\n          </h2>\n          {this.state.data.kids &&\n            this.state.data.kids.length > 0 && (\n              <div>\n                <h4>Comments</h4>\n                {this.state.data.kids.map((id, key) => (\n                  <Comment id={id} key={key} />\n                ))}\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onRequestClose);\n  }\n}\n\nexport default Story;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport List from './views/list';\nimport Story from './views/story';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/hackernews-ui\">\n        <div className=\"App\">\n          <Route path=\"/\" component={List} />\n          {/*<Route path=\"/:storyId\" component={Story} />*/}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/reboot.css';\nimport './styles/style.css';\n\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}